import java.util.Random;

public class Arrays {
    public static void t1() {
        /*
        Объявите три массива:
        Целочисленный массив, заполненный тремя цифрами — 1, 2 и 3 — с помощью ключевого слова new.
        Массив, в котором можно хранить три дробных числа — 1.57, 7.654, 9.986. Массив сразу заполните значениями.
        Произвольный массив. Тип и количество данных определите сами.
         Самостоятельно выберите способ создания массива: с помощью ключевого слова или сразу заполненный элементами.
         */
        int[] arrInt = new int[]{1, 2, 3};
        double[] arrDouble = {1.57, 7.654, 9.986};
        boolean[] arrBool = new boolean[]{true, false, true};
    }

    public static void t2() {
        /*
        Распечатайте на отдельной строчке элементы каждого массива по порядку через запятую.
        В конце строки запятую ставить не надо.

        Критерии оценки
В консоль вывели все элементы первого массива в верном порядке через запятую.
В консоль вывели все элементы второго массива в верном порядке через запятую.
В консоль вывели все элементы третьего массива в верном порядке через запятую.
На одной строчке расположены элементы только одного массива.
         */
        int[] arrInt = new int[]{1, 2, 3};
        double[] arrDouble = {1.57, 7.654, 9.986};
        boolean[] arrBool = new boolean[]{true, false, true};
        for (int i = 0; i < arrInt.length; i++) {
            System.out.printf("%d%s", arrInt[i], (i < (arrInt.length - 1) ? ", " : "\n"));
        }
        for (int i = 0; i < arrDouble.length; i++) {
            System.out.printf("%f%s", arrDouble[i], (i < (arrDouble.length - 1) ? ", " : "\n"));
        }
        for (int i = 0; i < arrBool.length; i++) {
            System.out.printf("%s%s", arrBool[i], (i < (arrBool.length - 1) ? ", " : "\n"));
        }
    }

    public static void t3() {
        /*
        Распечатайте на отдельной строчке элементы каждого массива в обратном порядке через запятую.
        В конце строки запятую ставить не надо.
         */
        int[] arrInt = new int[]{1, 2, 3};
        double[] arrDouble = {1.57, 7.654, 9.986};
        boolean[] arrBool = new boolean[]{true, false, false};
        for (int i = arrInt.length - 1; i >= 0; i--) {
            System.out.printf("%d%s", arrInt[i], (i > 0 ? ", " : "\n"));
        }
        for (int i = arrDouble.length - 1; i >= 0; i--) {
            System.out.printf("%f%s", arrDouble[i], (i > 0 ? ", " : "\n"));
        }
        for (int i = arrBool.length - 1; i >= 0; i--) {
            System.out.printf("%s%s", arrBool[i], (i > 0 ? ", " : "\n"));
        }
    }

    public static void t4() {
        /*
        Пройдитесь по первому целочисленному массиву и
        все нечетные числа в нем сделайте четными (нужно прибавить 1).

        Важно: код должен работать с любым целочисленным массивом,
        поэтому для решения задания используйте циклы.

        Распечатайте результат преобразования в консоль.
         */
        int[] arrInt = {1, 2, 3};
        for (int i = 0; i < arrInt.length; i++) {
            if (arrInt[i] % 2 > 0) {
                arrInt[i]++;
            }
            System.out.printf("%d%s", arrInt[i], (i < (arrInt.length - 1) ? ", " : "\n"));
        }
    }

    public static void t5() {
        /*
        Вводная часть
        Представьте, что вы работаете в компании и помогаете коллегам разбираться с рабочими вопросами.
        К вам обращаются сотрудники из бухгалтерии.

        Каждый день месяца, включая выходные, компания тратит некую сумму.
        Суммы записываются в бухгалтерскую книгу по дням.
        В книге 30 записей разных чисел, которые разнятся от 100 000 до 200 000.

        Создайте модель бухгалтерской книги — массив из случайных чисел от 100 000 до 200 000.
        На основе этого массива решите задачи.
        */

        /*
        Бухгалтеры попросили посчитать сумму всех выплат за месяц.
        Напишите программу, которая решит эту задачу, и выведите в консоль результат в формате:
        «Сумма трат за месяц составила … рублей».

        Критерии оценки
        Вычисления выполнили корректно.
        Результат вычислений вывели в консоль.
        Код написали без ошибок.
        Выполнили все условия задания.
         */
        int[] arr = generateRandomArray();
        int total = 0;
        for (int i : arr) {
            total += i;
        }
        System.out.printf("Сумма трат за месяц составила %d рублей%n", total);
    }

    public static void t6() {
        /*
        Также бухгалтерия попросила найти минимальную и максимальную трату за день.

        Напишите программу, которая решит эту задачу,
        и выведите в консоль результат в формате:
        «Минимальная сумма трат за день составила … рублей. Максимальная сумма трат за день составила … рублей».

        Критерии оценки
        Минимальное значение нашли корректно.
        Максимально значение нашли корректно.
        При изменении данных массива код работает корректно и выводит верный результат.
        Результат программы вывели в консоль согласно условию задания.
         */
        int[] arr = generateRandomArray();
        int min = Integer.MAX_VALUE;
        int max = Integer.MIN_VALUE;
        for (int i : arr) {
            if (min > i) {
                min = i;
            }
            if (max < i) {
                max = i;
            }
        }
        System.out.printf("Минимальная сумма трат за день составила %d рублей. " +
                "Максимальная сумма трат за день составила %d рублей%n", min, max);


    }

    public static void t7() {
        /*
        Теперь бухгалтерия хочет понять, какую в среднем сумму компания тратила в течение 30 дней.
        Напишите программу, которая посчитает среднее значение трат за месяц
        (то есть сумму всех трат за месяц поделить на количество дней),
        и выведите в консоль результат в формате: «Средняя сумма трат за месяц составила … рублей».

        Важно помнить: подсчет среднего значения может иметь остаток,
        то есть быть не целым, а дробным числом.

        Критерии оценки
        Среднюю сумму трат нашли корректно.
        При изменении данных массива программа работает корректно и выдает верный результат.
        В коде учтено, что средняя сумма трат может быть как целым, так и дробным числом.
         */

        int[] arr = generateRandomArray();
        int total = 0;
        float dailyAverage;
        for (int i : arr) {
            total += i;
        }
        dailyAverage = (float) total / 30;
        System.out.printf("Средняя сумма трат за месяц составила %.2f рублей%n", dailyAverage);
    }

    public static void t8() {
        /*
        В бухгалтерской книге появился баг.
        Что-то пошло нет так — фамилии и имена сотрудников начали отображаться в обратную сторону.
        Т. е. вместо «Иванов Иван» мы имеем «навИ вонавИ».
        Данные с именами сотрудников хранятся в виде массива символов — char[ ].

        Напишите код, который в случае такого бага будет
         выводить фамилии и имена сотрудников в корректном виде.
         В качестве данных для массива используйте:

         char[] reverseFullName = { 'n', 'a', 'v', 'I', ' ', 'v', 'o', 'n', 'a', 'v', 'I'};

         В результате в консоль должно быть выведено: Ivanov Ivan.
         Важно: не используйте дополнительные массивы для решения этой задачи.
         Необходимо корректно пройти по массиву циклом и
         распечатать его элементы в правильном порядке

         Критерии оценки
         Для решения задачи не использовали дополнительный массив.
         Для решения использовали цикл.
         Написанный код выводит в консоль корректные данные.
         */
        char[] reverseFullName = {'n', 'a', 'v', 'I', ' ', 'v', 'o', 'n', 'a', 'v', 'I'};
        StringBuilder str = new StringBuilder();
        for (int i = reverseFullName.length - 1; i >= 0; i--) {
            str.append(reverseFullName[i]);
        }
        System.out.println(str);
    }

    public static int[] generateRandomArray() {
        Random random = new Random();
        int[] arr = new int[30];
        for (int i = 0; i < arr.length; i++) {
            arr[i] = random.nextInt(100_000) + 100_000;
        }
        return arr;
    }

}
